{"version":3,"sources":["fbase.js","components/Navigation.js","components/AuthForm.js","routes/Auth.js","components/NweetFactory.js","components/Nweet.js","components/Feed.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Navigation","userObj","exact","to","displayName","onClick","signOut","AuthForm","error","setError","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","catch","message","signInWithEmailAndPassword","type","placeholder","required","Auth","onSocialLogin","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","code","NweetFactory","nweet","setNweet","attachment","setAttachment","nweetObj","text","creatorId","uid","createdAt","Date","now","attachmentUrl","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","collection","add","then","console","log","maxLength","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","src","alt","height","Nweet","isOwner","editing","setEditing","newNweet","setNewNweet","toggleEditing","onEdit","doc","id","update","updatedAt","onDelete","window","confirm","refFromURL","delete","Feed","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","key","Home","Profile","refreshUser","myNweets","setMyNweets","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","length","AppRouter","isLoggedIn","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20f00ef5.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DB_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  const onLogout = () => {\r\n    authService.signOut();\r\n  };\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <NavLink exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/profile\">\r\n            {userObj.displayName}'s profile\r\n          </NavLink>\r\n        </li>\r\n        <button onClick={onLogout}>Logout</button>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = ({ error, setError }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newAccount) {\r\n      await authService\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .catch((error) => {\r\n          setError(error.message);\r\n        });\r\n    } else {\r\n      await authService\r\n        .signInWithEmailAndPassword(email, password)\r\n        .catch((error) => {\r\n          setError(error.message);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        name=\"email\"\r\n        type=\"text\"\r\n        placeholder=\"Email\"\r\n        required\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Pasword\"\r\n        required\r\n        value={password}\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"submit\" value={newAccount ? \"Sign up\" : \"Login\"} />\r\n      <button\r\n        onClick={() => {\r\n          setNewAccount(!newAccount);\r\n          setError(\"\");\r\n        }}\r\n      >\r\n        {newAccount ? \"I have a account\" : \"I don't have a account\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const onSocialLogin = (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    authService.signInWithPopup(provider).catch((error) => {\r\n      if (error.code === \"auth/account-exists-with-different-credential\") {\r\n        setError(\r\n          \"The account already exists with same email. Try another login method.\"\r\n        );\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <AuthForm error={error} setError={setError} />\r\n      {error}\r\n      <div>\r\n        <button onClick={onSocialLogin} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialLogin} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(null);\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNweet(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (nweet !== \"\") {\r\n        const nweetObj = {\r\n          text: nweet,\r\n          creatorId: userObj.uid,\r\n          createdAt: Date.now(),\r\n          attachmentUrl: null,\r\n        };\r\n        if (attachment !== null) {\r\n          const fileRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n          const response = await fileRef.putString(attachment, \"data_url\");\r\n          nweetObj.attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService\r\n          .collection(\"nweets\")\r\n          .add(nweetObj)\r\n          .then(() => {\r\n            setNweet(\"\");\r\n            setAttachment(null);\r\n          });\r\n      } else {\r\n        console.log(\"Nweet is empty!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.code);\r\n    }\r\n  };\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(theFile);\r\n    reader.onloadend = (finishedEvent) => {\r\n      setAttachment(finishedEvent.target.result);\r\n    };\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(null);\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        placeholder=\"Nweet your thoughts...\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} alt=\"attachment\" height=\"100px\" />\r\n          <button onClick={onClearAttachment}>Clear Photo</button>\r\n        </div>\r\n      )}\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweet, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweet.text);\r\n  const toggleEditing = () => {\r\n    setEditing(!editing);\r\n    setNewNweet(nweet.text);\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewNweet(value);\r\n  };\r\n  const onEdit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (newNweet !== \"\") {\r\n        await dbService\r\n          .doc(`nweets/${nweet.id}`)\r\n          .update({ text: newNweet, updatedAt: Date.now() })\r\n          .then(() => {\r\n            toggleEditing();\r\n          });\r\n      } else {\r\n        console.log(\"can't make Nweet empty!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.code);\r\n    }\r\n  };\r\n  const onDelete = async () => {\r\n    const ok = window.confirm(\"Are you sure to delete Nweet?\");\r\n    if (ok) {\r\n      if (nweet.attachmentUrl !== null) {\r\n        await storageService.refFromURL(nweet.attachmentUrl).delete();\r\n      }\r\n      await dbService.doc(`nweets/${nweet.id}`).delete();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {!editing ? (\r\n        <div>\r\n          {nweet.attachmentUrl && (\r\n            <img\r\n              src={nweet.attachmentUrl}\r\n              alt=\"nweet.attachmentUrl\"\r\n              height=\"100px\"\r\n            />\r\n          )}\r\n          <span>{nweet.text}</span>\r\n          {nweet.updatedAt && <span>-edited</span>}\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={onEdit}>\r\n          <input\r\n            placeholder=\"Edit your nweet...\"\r\n            value={newNweet}\r\n            onChange={onChange}\r\n            maxLength={120}\r\n            required\r\n          ></input>\r\n          <input type=\"submit\" value=\"edit\" />\r\n          <button onClick={toggleEditing}>cancel</button>\r\n        </form>\r\n      )}\r\n      {isOwner && !editing && (\r\n        <>\r\n          <button onClick={onDelete}>delete</button>\r\n          <button onClick={toggleEditing}>edit</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst Feed = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {nweets.map((nweet) => (\r\n        <Nweet\r\n          key={nweet.id}\r\n          nweet={nweet}\r\n          isOwner={userObj.uid === nweet.creatorId}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Feed;\r\n","import React from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport Feed from \"components/Feed\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  return (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <Feed userObj={userObj} />\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [myNweets, setMyNweets] = useState([]);\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    setMyNweets(\r\n      nweets.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }))\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  });\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <div>\r\n        {myNweets.length > 0\r\n          ? myNweets.map((nweet) => (\r\n              <Nweet\r\n                key={nweet.id}\r\n                nweet={nweet}\r\n                isOwner={userObj.uid === nweet.creatorId}\r\n              />\r\n            ))\r\n          : \"There's no Nweet...\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"🧀\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}