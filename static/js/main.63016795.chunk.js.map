{"version":3,"sources":["fbase.js","components/Navigation.js","components/AuthForm.js","routes/Auth.js","components/NweetFactory.js","components/Nweet.js","components/Feed.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Navigation","userObj","className","exact","to","icon","faTwitter","color","size","faUser","displayName","onClick","signOut","AuthForm","error","setError","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","catch","message","signInWithEmailAndPassword","type","placeholder","required","Auth","onSocialLogin","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","code","style","marginBottom","faGoogle","faGithub","NweetFactory","nweet","setNweet","attachment","setAttachment","nweetObj","text","creatorId","uid","createdAt","Date","now","attachmentUrl","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","collection","add","then","console","log","maxLength","id","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","for","faPlus","src","alt","backgroundImage","faTimes","Nweet","isOwner","editing","setEditing","newNweet","setNewNweet","toggleEditing","onEdit","doc","update","updatedAt","onDelete","window","confirm","refFromURL","delete","autoFocus","class","faTrash","faPencilAlt","Feed","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","key","Home","Profile","refreshUser","myNweets","setMyNweets","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","marginTop","length","AppRouter","isLoggedIn","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63016795.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DB_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  const onLogout = () => {\r\n    authService.signOut();\r\n  };\r\n  return (\r\n    <nav>\r\n      <ul className=\"navigator\">\r\n        <li>\r\n          <NavLink className=\"nav_home\" exact to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"nav_profile\" exact to=\"/profile\">\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span className=\"nav_profile_span\">\r\n              {userObj ? `${userObj.displayName}` : \"Profile\"}\r\n            </span>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <span className=\"formBtn cancelBtn logOut\" onClick={onLogout}>\r\n            Logout\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = ({ error, setError }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newAccount) {\r\n      await authService\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .catch((error) => {\r\n          setError(error.message);\r\n        });\r\n    } else {\r\n      await authService\r\n        .signInWithEmailAndPassword(email, password)\r\n        .catch((error) => {\r\n          setError(error.message);\r\n        });\r\n    }\r\n  };\r\n  const toggleAuth = () => {\r\n    setNewAccount(!newAccount);\r\n    setError(\"\");\r\n  };\r\n  return (\r\n    <form className=\"container\" onSubmit={onSubmit}>\r\n      <input\r\n        className=\"authInput\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        placeholder=\"Email\"\r\n        required\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        className=\"authInput\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Pasword\"\r\n        required\r\n        value={password}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        className=\"authInput authSubmit\"\r\n        type=\"submit\"\r\n        value={newAccount ? \"Sign up\" : \"Login\"}\r\n      />\r\n      <span className=\"authSwitch\" onClick={toggleAuth}>\r\n        {newAccount ? \"I have a account\" : \"I don't have a account\"}\r\n      </span>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const onSocialLogin = (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    authService.signInWithPopup(provider).catch((error) => {\r\n      if (error.code === \"auth/account-exists-with-different-credential\") {\r\n        setError(\r\n          \"The account already exists with same email. Try another login method.\"\r\n        );\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm error={error} setError={setError} />\r\n      {error && <span className=\"authError\">{error}</span>}\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialLogin} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialLogin} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(null);\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNweet(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (nweet !== \"\") {\r\n        const nweetObj = {\r\n          text: nweet,\r\n          creatorId: userObj.uid,\r\n          createdAt: Date.now(),\r\n          attachmentUrl: null,\r\n        };\r\n        if (attachment !== null) {\r\n          const fileRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n          const response = await fileRef.putString(attachment, \"data_url\");\r\n          nweetObj.attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService\r\n          .collection(\"nweets\")\r\n          .add(nweetObj)\r\n          .then(() => {\r\n            setNweet(\"\");\r\n            setAttachment(null);\r\n          });\r\n      } else {\r\n        console.log(\"Nweet is empty!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.code);\r\n    }\r\n  };\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(theFile);\r\n    reader.onloadend = (finishedEvent) => {\r\n      setAttachment(finishedEvent.target.result);\r\n    };\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(null);\r\n  };\r\n  return (\r\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          placeholder=\"Nweet your thoughts...\"\r\n          maxLength={120}\r\n        />\r\n        <input\r\n          className=\"formFileInput\"\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n        />\r\n        <input value=\"&rarr;\" className=\"factoryInput__arrow\" type=\"submit\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            alt=\"attachment\"\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweet, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweet.text);\r\n  const toggleEditing = () => {\r\n    setEditing(!editing);\r\n    setNewNweet(nweet.text);\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewNweet(value);\r\n  };\r\n  const onEdit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (newNweet !== \"\") {\r\n        await dbService\r\n          .doc(`nweets/${nweet.id}`)\r\n          .update({ text: newNweet, updatedAt: Date.now() })\r\n          .then(() => {\r\n            toggleEditing();\r\n          });\r\n      } else {\r\n        console.log(\"can't make Nweet empty!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.code);\r\n    }\r\n  };\r\n  const onDelete = async () => {\r\n    const ok = window.confirm(\"Are you sure to delete Nweet?\");\r\n    if (ok) {\r\n      if (nweet.attachmentUrl !== null) {\r\n        await storageService.refFromURL(nweet.attachmentUrl).delete();\r\n      }\r\n      await dbService.doc(`nweets/${nweet.id}`).delete();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {!editing ? (\r\n        <div>\r\n          {nweet.attachmentUrl && (\r\n            <img src={nweet.attachmentUrl} alt=\"nweet.attachmentUrl\" />\r\n          )}\r\n          <span>{nweet.text}</span>\r\n          {nweet.updatedAt && <span>-edited</span>}\r\n        </div>\r\n      ) : (\r\n        <form className=\"container nweetEdit\" onSubmit={onEdit}>\r\n          <input\r\n            className=\"formInput\"\r\n            placeholder=\"Edit your nweet...\"\r\n            value={newNweet}\r\n            onChange={onChange}\r\n            maxLength={120}\r\n            required\r\n            autoFocus\r\n          />\r\n          <input className=\"formBtn\" type=\"submit\" value=\"edit\" />\r\n          <button className=\"formBtn cancelBtn\" onClick={toggleEditing}>\r\n            cancel\r\n          </button>\r\n        </form>\r\n      )}\r\n      {isOwner && !editing && (\r\n        <div class=\"nweet__actions\">\r\n          <span onClick={onDelete}>\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </span>\r\n          <span onClick={toggleEditing}>\r\n            <FontAwesomeIcon icon={faPencilAlt} />\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst Feed = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"feed\">\r\n      {nweets.map((nweet) => (\r\n        <Nweet\r\n          key={nweet.id}\r\n          nweet={nweet}\r\n          isOwner={userObj.uid === nweet.creatorId}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Feed;\r\n","import React from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport Feed from \"components/Feed\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <Feed userObj={userObj} />\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [myNweets, setMyNweets] = useState([]);\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    setMyNweets(\r\n      nweets.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }))\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  });\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          className=\"formInput\"\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n        />\r\n        <input\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n        />\r\n      </form>\r\n      <div>\r\n        {myNweets.length > 0\r\n          ? myNweets.map((nweet) => (\r\n              <Nweet\r\n                key={nweet.id}\r\n                nweet={nweet}\r\n                isOwner={userObj.uid === nweet.creatorId}\r\n              />\r\n            ))\r\n          : \"There's no Nweet...\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div className=\"router\">\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"🧀\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}